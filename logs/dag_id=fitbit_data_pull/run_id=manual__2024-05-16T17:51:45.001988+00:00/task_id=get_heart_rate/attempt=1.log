[2024-05-16T17:51:46.025+0000] {taskinstance.py:1083} INFO - Dependencies all met for <TaskInstance: fitbit_data_pull.get_heart_rate manual__2024-05-16T17:51:45.001988+00:00 [queued]>
[2024-05-16T17:51:46.030+0000] {taskinstance.py:1083} INFO - Dependencies all met for <TaskInstance: fitbit_data_pull.get_heart_rate manual__2024-05-16T17:51:45.001988+00:00 [queued]>
[2024-05-16T17:51:46.031+0000] {taskinstance.py:1279} INFO - 
--------------------------------------------------------------------------------
[2024-05-16T17:51:46.032+0000] {taskinstance.py:1280} INFO - Starting attempt 1 of 2
[2024-05-16T17:51:46.032+0000] {taskinstance.py:1281} INFO - 
--------------------------------------------------------------------------------
[2024-05-16T17:51:46.040+0000] {taskinstance.py:1300} INFO - Executing <Task(PythonOperator): get_heart_rate> on 2024-05-16 17:51:45.001988+00:00
[2024-05-16T17:51:46.045+0000] {standard_task_runner.py:55} INFO - Started process 1580 to run task
[2024-05-16T17:51:46.048+0000] {standard_task_runner.py:82} INFO - Running: ['***', 'tasks', 'run', 'fitbit_data_pull', 'get_heart_rate', 'manual__2024-05-16T17:51:45.001988+00:00', '--job-id', '39', '--raw', '--subdir', 'DAGS_FOLDER/fitbit_pull_dag.py', '--cfg-path', '/tmp/tmp5bjv9l3t']
[2024-05-16T17:51:46.049+0000] {standard_task_runner.py:83} INFO - Job 39: Subtask get_heart_rate
[2024-05-16T17:51:46.109+0000] {task_command.py:388} INFO - Running <TaskInstance: fitbit_data_pull.get_heart_rate manual__2024-05-16T17:51:45.001988+00:00 [running]> on host f88edbb2c20c
[2024-05-16T17:51:46.157+0000] {taskinstance.py:1509} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=fitbit_data_pull
AIRFLOW_CTX_TASK_ID=get_heart_rate
AIRFLOW_CTX_EXECUTION_DATE=2024-05-16T17:51:45.001988+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=manual__2024-05-16T17:51:45.001988+00:00
[2024-05-16T17:51:46.653+0000] {python.py:177} INFO - Done. Returned value was:            date      time  heartrate
0    2024-05-15  00:00:00         62
1    2024-05-15  00:01:00         67
2    2024-05-15  00:02:00         62
3    2024-05-15  00:03:00         62
4    2024-05-15  00:04:00         61
..          ...       ...        ...
762  2024-05-15  23:55:00         63
763  2024-05-15  23:56:00         57
764  2024-05-15  23:57:00         59
765  2024-05-15  23:58:00         62
766  2024-05-15  23:59:00         58

[767 rows x 3 columns]
[2024-05-16T17:51:46.668+0000] {xcom.py:635} ERROR - Object of type DataFrame is not JSON serializable. If you are using pickle instead of JSON for XCom, then you need to enable pickle support for XCom in your *** config or make sure to decorate your object with attr.
[2024-05-16T17:51:46.669+0000] {taskinstance.py:1768} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 72, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 2297, in xcom_push
    session=session,
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 72, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/xcom.py", line 240, in set
    map_index=map_index,
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/xcom.py", line 627, in serialize_value
    return json.dumps(value, cls=XComEncoder).encode("UTF-8")
  File "/usr/local/lib/python3.7/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/json.py", line 176, in encode
    return super().encode(o)
  File "/usr/local/lib/python3.7/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.7/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/json.py", line 170, in default
    return super().default(o)
  File "/usr/local/lib/python3.7/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
[2024-05-16T17:51:46.677+0000] {taskinstance.py:1323} INFO - Marking task as UP_FOR_RETRY. dag_id=fitbit_data_pull, task_id=get_heart_rate, execution_date=20240516T175145, start_date=20240516T175146, end_date=20240516T175146
[2024-05-16T17:51:46.685+0000] {standard_task_runner.py:105} ERROR - Failed to execute job 39 for task get_heart_rate (Object of type DataFrame is not JSON serializable; 1580)
[2024-05-16T17:51:46.714+0000] {local_task_job.py:208} INFO - Task exited with return code 1
[2024-05-16T17:51:46.734+0000] {taskinstance.py:2578} INFO - 0 downstream tasks scheduled from follow-on schedule check
